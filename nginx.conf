events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # include mime.types;
    default_type application/octet-stream;

    # Logging settings
    # access_log logs/access.log;
    # error_log logs/error.log;

    # Gzip settings
    gzip on;
    gzip_disable "msie6";

    # SSL settings (adjust accordingly)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Include site-specific configurations
    # include conf.d/*.conf;

    # Site-specific configuration
    server {
        # Listen on port 443 for HTTPS
        listen 8080;
        listen 8443 default ssl;
        server_name example.com;  # or _ if you just want default

        # SSL Certificate settings
        ssl_certificate     cert.pem;
        ssl_certificate_key key.pem;

        # Serve your static site or pass HTTP traffic to Python's HTTP server
        location / {
            # For a simple static file scenario, you could do:
            # root html;
            # index index.html;

            # OR if you’re proxying Python’s HTTP server:
            proxy_pass http://127.0.0.1:8000;
        }

        # WebSocket location
        # Route all /ws/ traffic to the Python WebSocket server
        location /ws/ {
            proxy_pass http://127.0.0.1:8765;  # Python's WebSocket server

            proxy_http_version 1.1;            # Required for WebSockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
